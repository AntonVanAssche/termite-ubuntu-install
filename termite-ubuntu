#!/bin/bash

buildDir="$(pwd)"

date=$(date +"%d-%m-%Y")
time=$(date +"%T")

logFile="$buildDir/log/$date-$time-termite-ubuntu.log"

# Create log directory if not exists.
mkdir -p $buildDir/log/

# Abort if error
set -e

function ask_sudo() {

    # Ask for the administrator password upfront.

    sudo -v &> /dev/null

    # Update existing `sudo` time stamp
    # until this script has finished.
    #
    # https://gist.github.com/cowboy/3118588

    while true; do
        sudo -n true
        sleep 60
        kill -0 "$$" || exit
    done &> /dev/null &

}

function message() {
    # $1 = type , $2 = message
    # Message types
    # info
    # warning
    # error
    if [[ -z "${1}" ]] || [[ -z "${2}" ]]; then
      return
    fi

    local RED="\e[31m"
    local GREEN="\e[32m"
    local YELLOW="\e[33m"
    local RESET="\e[0m"
    local MESSAGE_TYPE=""
    local MESSAGE=""
    MESSAGE_TYPE="${1}"
    MESSAGE="${2}"

    case ${MESSAGE_TYPE} in
      info) echo -e "  [${GREEN}+${RESET}] INFO: ${MESSAGE}";;
      quest) echo -en "  [${GREEN}?${RESET}] INPUT: ${MESSAGE}";;
      warn) echo -e "  [${YELLOW}*${RESET}] WARNING: ${MESSAGE}";;
      error) echo -e "  [${RED}!${RESET}] ERROR: ${MESSAGE}";;
      *) echo -e "  [?] UNKNOWN: ${MESSAGE}";;
    esac
}

# Checks if OS is supported by detecting apt.
if ! command -v apt &> /dev/null; then
  message error "Your system is not supported."
  exit 1
fi

case $1 in
  --h| --help)
    message info 'Usage:'
    echo '      ./termite-ubuntu [FLAG]'
    echo '      Flags:'
    echo '          --install    (or --I)               Installs Termite.'
    echo '          --uninstall  (or --U)               Uninstalls Termite.'
    exit 1
    ;;

  --I| --install)
    touch $logFile

    # Check if Termite is already installed.
    if ;command -v termite &> /dev/null; then
      message info "Termite already installed."
      exit 1
    fi

    ask_sudo

    message info "Installing dependencies..."
    sudo apt -y install git g++ libgtk-3-dev gtk-doc-tools gnutls-bin valac libtool intltool libpcre2-dev libglib3.0-cil-dev libgnutls28-dev libgirepository1.0-dev libxml2-utils gperf

    message info "Cloning vte-ng..."
    git clone -q -b 0.56.2.a https://github.com/thestinger/vte-ng.git

    message info "Cloning Termite..."
    git clone -q --recursive -b v15 https://github.com/thestinger/termite.git

    message info "Installing vte-ng..."
    cd $buildDir/vte-ng

    NOCONFIGURE=1 ./autogen.sh
      ./configure \
      --prefix=$buildDir/vte-static \
      --enable-static \
      --disable-shared \
      --enable-vala=no \
      --disable-gtk-doc \
      --disable-introspection

    make
    make install
    make install-pkgconfigDATA

    message info "Installing Termite..."
    cd $buildDir/termite

    export PKG_CONFIG_PATH="$buildDir/vte-static/lib/pkgconfig"
    make
    sudo make install

    sudo cat << EOF > termite.wrapper
#!/bin/bash
exec /usr/local/bin/termite "\$@"
EOF

    sudo chmod +x termite.wrapper

    sudo install -d /usr/local/bin/
    sudo install -m 755 termite.wrapper /usr/local/bin/

    sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /usr/local/bin/termite.wrapper 60

    sudo install -d /usr/local/etc/profile.d/
    sudo install -m 644 "$buildDir/vte-static/etc/profile.d/vte.sh" /usr/local/etc/profile.d/

    sudo install -d /usr/share/terminfo/x
    sudo ln -s /usr/local/share/terminfo/x/xterm-termite /usr/share/terminfo/x/xterm-termite

    cd $buildDir
    rm -rf $buildDir/{vte-ng,termite,vte-static}
    message info "Log-file available at $logFile"
    ;;

  --U| --uninstall)
    touch $logFile

    message warn "you are about to uninstall Termite."
    message quest "Are you sure you want to continue? [y/N]"
    read -p " " continue

    if [[ $continue == 'y|Y|yes|YES' ]]; then
      ask_sudo

      sudo update-alternatives --remove x-terminal-emulator /usr/local/bin/termite.wrapper

      sudo rm -f /usr/local/bin/termite.wrapper
      sudo rm -f /usr/local/etc/profile.d/vte.sh
      sudo rmdir --ignore-fail-on-non-empty /usr/local/etc/profile.d
      sudo rm -f /usr/share/terminfo/x/xterm-termite
      sudo rmdir --ignore-fail-on-non-empty /usr/share/terminfo/x

      sudo rm -f /usr/local/bin/termite
      sudo rm -f /etc/xdg/termite/config
      sudo rmdir --ignore-fail-on-non-empty /etc/xdg/termite
      sudo rm -f /usr/local/share/applications/termite.desktop
      sudo rm -f /usr/local/share/man/man1/termite.1
      sudo rm -f /usr/local/share/man/man5/termite.config.5
      sudo rm -f /usr/local/share/terminfo/x/xterm-termite
      sudo rmdir --ignore-fail-on-non-empty /usr/local/share/terminfo/x

      message info "Log-file available at $logFile"
    else
      exit 1
    fi
    ;;

    *)
      message error "Unknown option."
    ;;

esac 2>&1 | tee -a "$logFile"
